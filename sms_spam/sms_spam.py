# -*- coding: utf-8 -*-
"""SMS_Spam.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eKUN_D1H3jzsNQP0oyYBvgLNEK13t6QT

Import all the required libraries
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

from sklearn.feature_extraction.text import TfidfVectorizer, CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.ensemble import AdaBoostClassifier
from sklearn.svm import SVC

from wordcloud import WordCloud

"""Set the encoding so as to properly handle the non-ASCII characters"""

df = pd.read_csv("/content/spam.csv", encoding = "ISO-8859-1")

df.head()

"""Remove unneccessary columns and rename the columns for better understanding"""

df = df.drop(["Unnamed: 2", "Unnamed: 3", "Unnamed: 4"], axis = 1)

df.rename(columns={"v1": "label", "v2": "input_text"}, inplace=True)
df["b_label"] = df["label"].map({"ham": 0, "spam": 1})
df.head()

input_text = df["input_text"]
b_label = df["b_label"]

X_train, X_test, y_train, y_test = train_test_split(input_text, b_label, test_size = 0.33)

"""CountVectorizer: Counts the occurences of word in the given text/input"""

featurizer = CountVectorizer(decode_error="ignore")
X_train = featurizer.fit_transform(X_train)
X_test = featurizer.transform(X_test)

naive_bayes_model = MultinomialNB()
naive_bayes_model.fit(X_train, y_train)
print("Classification scores of Naive Bayes Classifier: \n")
print(f"train_score : {naive_bayes_model.score(X_train, y_train)}")
print(f"test_score : {naive_bayes_model.score(X_test, y_test)}")

"""TFIDFVectorizer : this will penalize the common words that occur in all the inputs and doesn't mean or contribute much in modelling"""

tfidf_featurizer = TfidfVectorizer(decode_error="ignore")
X_train = tfidf_featurizer.fit_transform([str(row) for row in X_train])
X_test = tfidf_featurizer.transform([str(row) for row in X_test])

naive_bayes_model2 = MultinomialNB()
naive_bayes_model2.fit(X_train, y_train)
print("Classification scores of Naive Bayes Classifier: \n")
print(f"train_score : {naive_bayes_model2.score(X_train, y_train)}")
print(f"test_score : {naive_bayes_model2.score(X_test, y_test)}")

"""Here is a function to vizualize the most frequent words and less frequent words.

`WordCloud` helps us vizualize freq of words better through the size of word.
* Bigger the size of word - More freq the word appeared
"""

def vizualise(label):
  words = ''
  for text in df[df["label"]==label]["input_text"]:
    text = text.lower()
    words += text + ' '

  wordcloud = WordCloud(width = 600, height = 400, background_color= "white").generate(words)

  plt.imshow(wordcloud)
  plt.axis('off')
  plt.show()
  return

"""WordCloud for `non-spam` input messages"""

vizualise("ham")

"""WordCloud for `spam` input messages"""

vizualise("spam")

